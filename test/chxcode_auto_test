# shellcheck shell=sh

. ./share/chxcode/auto
. ./test/helper

test_auto_loaded_in_zsh() {
  [ -n "$ZSH_VERSION" ] || return 0

  assertEquals "chxcode_auto" "${preexec_functions:?}"
}

test_auto_load_is_idempotent_in_zsh() {
  [ -n "$ZSH_VERSION" ] || return 0

  . ./share/chxcode/auto

  assertNotEquals "should not add chxcode twice" \
    "${preexec_functions:?}" \
    "chxcode_auto chxcode_auto"
}

test_auto_loaded_in_bash() {
  [ -n "$BASH_VERSION" ] || return 0

  command=". $PWD/share/chxcode/auto && trap -p DEBUG"
  output="$("$SHELL" -c "$command")"

  assertTrue "did not add a trap hook for chxcode_auto" \
    "$(echo "$output" | grep ".*chxcode_auto.*")"
}

test_auto_enter_versioned_directory() {
  echo "9.3" > "$test_project_dir/.xcode-version"

  cd "$test_project_dir" && chxcode_auto

  assertEquals "should switch Xcode when entering a versioned directory" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_enter_tool_versions_directory() {
  echo "xcode 9.3\nruby 2.6" > "$test_project_dir/.tool-versions"

  cd "$test_project_dir" && chxcode_auto

  assertEquals "should switch Xcode when entering a .tool-versions directory" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_enter_versioned_subdirectory() {
  echo "9.3" > "$test_project_dir/.xcode-version"
  mkdir "$test_project_dir/subdir"

  cd "$test_project_dir/subdir" && chxcode_auto

  assertEquals "should switch Xcode when entering a subdirectory of a versioned directory" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_enter_tool_versions_subdirectory() {
  echo "xcode 9.3\nruby2.6" > "$test_project_dir/.tool-versions"
  mkdir "$test_project_dir/subdir"

  cd "$test_project_dir/subdir" && chxcode_auto

  assertEquals "should switch Xcode when entering a subdirectory of a .tool-versions directory" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_enter_subdir() {
  mkdir -p "$test_project_dir/subdir"
  echo "9.3" > "$test_project_dir/.xcode-version"
  cd "$test_project_dir" && chxcode_auto

  cd "subdir" && chxcode_auto

  assertEquals "should keep the current Xcode when entering a sub-directory" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_modified_version() {
  echo "9.2" > "$test_project_dir/.xcode-version"
  cd "$test_project_dir" && chxcode_auto

  echo "9.3" > "$test_project_dir/.xcode-version" && chxcode_auto

  assertEquals "should detect changes to the Xcode version" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"

}

test_auto_leave_versioned_dir() {
  echo "9.2" > "$test_project_dir/.xcode-version"
  cd "$test_project_dir" && chxcode_auto

  cd "$test_project_dir/.." && chxcode_auto

  assertNull "should reset the current Xcode when leaving a versioned directory" \
    "$DEVELOPER_DIR"

}

test_auto_unknown_version() {
  echo "9.2" > "$test_project_dir/.xcode-version"
  mkdir "$test_project_dir/bad"
  echo "bad" > "$test_project_dir/bad/.xcode-version"
  cd "$test_project_dir" && chxcode_auto

  cd bad && chxcode_auto

  assertEquals "should keep current Xcode version when loading an unknown version " \
    "$search_path/Xcode-9.2.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

test_auto_allows_overriding_version() {
  echo "9.2" > "$test_project_dir/.xcode-version"
  cd "$test_project_dir" && chxcode_auto

  chxcode 9.3 && chxcode_auto

  assertEquals "should override Xcode auto version" \
    "$search_path/Xcode.app/Contents/Developer" \
    "$DEVELOPER_DIR"
}

# shellcheck source=/dev/null
SHUNIT_PARENT=$0 . $SHUNIT2
